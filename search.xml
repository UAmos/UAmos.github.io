<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>函数取个好名字</title>
      <link href="/2019/12/29/%E5%87%BD%E6%95%B0%E5%8F%96%E4%B8%AA%E5%A5%BD%E5%90%8D%E5%AD%97/"/>
      <url>/2019/12/29/%E5%87%BD%E6%95%B0%E5%8F%96%E4%B8%AA%E5%A5%BD%E5%90%8D%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;重构是个技术活，特别是取名字，一个好的名字可以省去很多注释代码，一个好的项目见名知意；所以这边搜罗了一些取名字的字典</p><h4 id="常用动词表"><a href="#常用动词表" class="headerlink" title="常用动词表"></a>常用动词表</h4><table><thead><tr><th>类别</th><th align="right">单词</th></tr></thead><tbody><tr><td>添加/插入/创建/初始化/加载</td><td align="right">add、append、insert、create、initialize、load</td></tr><tr><td>删除/销毁</td><td align="right">delete、remove、destroy、drop</td></tr><tr><td>打开/开始/启动</td><td align="right">open、start</td></tr><tr><td>关闭/停止</td><td align="right">close、stop</td></tr><tr><td>获取/读取/查找/查询</td><td align="right">get、fetch、acquire、read、search、find、query</td></tr><tr><td>设置/重置/放入/写入/释放/刷新</td><td align="right">set、reset、put、write、release、refresh</td></tr><tr><td>发送/推送</td><td align="right">send、push</td></tr><tr><td>接收/拉取</td><td align="right">receive、pull</td></tr><tr><td>提交/撤销/取消</td><td align="right">submit、cancel</td></tr><tr><td>收集/采集/选取/选择</td><td align="right">collect、pick、select</td></tr><tr><td>提取/解析</td><td align="right">sub、extract、parse</td></tr><tr><td>编码/解码</td><td align="right">encode、decode</td></tr><tr><td>填充/打包/压缩</td><td align="right">fill、pack、compress</td></tr><tr><td>清空/拆包/解压</td><td align="right">flush、clear、unpack、decompress</td></tr><tr><td>增加/减少</td><td align="right">increase、decrease、reduce</td></tr><tr><td>分隔/拼接</td><td align="right">split、join、concat</td></tr><tr><td>过滤/校验/检测/审核/通过</td><td align="right">filter、valid、check、audit、adopt</td></tr></tbody></table><h4 id="常用名词表"><a href="#常用名词表" class="headerlink" title="常用名词表"></a>常用名词表</h4><table><thead><tr><th>类别</th><th align="right">单词</th></tr></thead><tbody><tr><td>容量/大小/长度</td><td align="right">capacity、size、length</td></tr><tr><td>实例/上下文</td><td align="right">instance、context</td></tr><tr><td>配置</td><td align="right">config、settings</td></tr><tr><td>头部/前面/前一个/第一个</td><td align="right">header、front、previous、first</td></tr><tr><td>尾部/后面/后一个/最后一个</td><td align="right">tail、back、next、last</td></tr><tr><td>区间/区域/某一部分/范围/规模</td><td align="right">range、interval、region、area、section、scope、scale</td></tr><tr><td>缓存/缓冲/会话</td><td align="right">cache、buffer、session</td></tr><tr><td>本地/局部/全局</td><td align="right">local、global</td></tr><tr><td>成员/元素</td><td align="right">member、element</td></tr><tr><td>菜单/列表</td><td align="right">menu、list</td></tr><tr><td>源/目标</td><td align="right">source、destination、target</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原码、补码、反码</title>
      <link href="/2019/12/29/%E5%8E%9F%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81/"/>
      <url>/2019/12/29/%E5%8E%9F%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;在计算机内部，所有的信息都是以二进制形式存在的，这最原始的二进制即为<strong>原码</strong><br>如整数 10 （int 占四个字节，一个字节为8个bit），在计算机内部二进制表示为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000000 00000000 00000000 00001010.</span><br></pre></td></tr></table></figure><p>但是数字有正负，所以计算机约定，以最高位来标识正负，所以整数<code>-10</code>就表示为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000000 00000000 00000000 00001010.</span><br></pre></td></tr></table></figure><p>但是一个字节的取值范围不是<code>[-128,127]</code>吗？按这理论，应该是<code>[-127,127]</code>啊！这是用<code>-128</code> 代替了 <code>-0</code>(零只有一个嘛)。我们尝试使用二进制来进行数字的运算，如:<code>10+10</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    00000000 00000000 00000000 00001010</span><br><span class="line">+   00000000 00000000 00000000 00001010</span><br><span class="line">-----------------------------------------</span><br><span class="line">&#x3D;   00000000 00000000 00000000 00010100</span><br></pre></td></tr></table></figure><p>结果为<code>20(2^5+2^2)</code>，和预料的相符。<br>如果换成负数呢？我们知道，绝对值相等的正负数，他们的和等于零，<code>10+(-10)=0</code>，拿到计算机内部二级制表示为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    00000000 00000000 00000000 00001010</span><br><span class="line">+   10000000 00000000 00000000 00001010</span><br><span class="line">-----------------------------------------</span><br><span class="line">&#x3D;   10000000 00000000 00000000 00010100</span><br></pre></td></tr></table></figure><p>换算成十进制为<code>-20(2^5+2^2)</code>，显然，如果计算机这样计算的话就错了。所以科学家们想出来了另一种解决方法：站在计算机的角度，正数的加法是正确的，而正数加上一个负数却有问题。我们可以设置这样一个数和原码互补，这样两个互补的二进制之和就等于零了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    00000000 00000000 00000000 00001010</span><br><span class="line">+   11111111 11111111 11111111 11110110</span><br><span class="line">-----------------------------------------</span><br><span class="line">&#x3D;   00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure><p>这样抛开溢出的一位，就和期望的0相符了。这里和原码形成互补关系的二进制我们称为<strong>补码</strong><br>使用几个运算证实下我们的结论</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-4 + (-7):</span><br><span class="line">4：00000000 00000000 00000000 00000100，</span><br><span class="line">7：00000000 00000000 00000000 00000111</span><br><span class="line">(-4补码)：11111111 11111111 11111111 11111100， </span><br><span class="line">(-7补码)：11111111 11111111 11111111 11111001</span><br><span class="line">11：00000000 00000000 00000000 00001011</span><br><span class="line">(-11补码)：11111111 11111111 11111111 11110101</span><br><span class="line"></span><br><span class="line">    11111111 11111111 11111111 11111100</span><br><span class="line">+   11111111 11111111 11111111 11111001</span><br><span class="line">-----------------------------------------</span><br><span class="line">&#x3D;   11111111 11111111 11111111 11110101</span><br></pre></td></tr></table></figure><p>所以我们的结论是可行的，补码和原码互为互补关系。<br>&emsp;&emsp;再次声明一下，所有的这些对于正数来说都是不需要的，正数的原码，反码，补码都是一样的。<br>&emsp;&emsp;那么反码是什么呢？反码比较好理解，就是对原码取反（符号为不变，其他值取反），如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-10</span><br><span class="line">10000000 00000000 00000000 00001010</span><br><span class="line">~(-10)</span><br><span class="line">11111111 11111111 11111111 11110101</span><br><span class="line">-11</span><br><span class="line">10000000 00000000 00000000 00010101</span><br><span class="line">~(-11)</span><br><span class="line">10000000 00000000 00000000 00001010</span><br></pre></td></tr></table></figure><p>这边我们可以发现个规律：补码 = 反码 + 1，你不信可以试试。</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/28/hello-world/"/>
      <url>/2019/12/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
